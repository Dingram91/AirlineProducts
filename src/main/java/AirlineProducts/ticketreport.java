package AirlineProducts;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
public class ticketreport extends javax.swing.JInternalFrame {

    /**
     * Creates new form ticketreport
     */
    public ticketreport() {
        initComponents();
        LoadData();
    }

    Connection con;
    PreparedStatement pst;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TicketNo", "Flight No", "Customer ID", "Class", "Price", "Seats", "Date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnClickedCancel(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnClickedCancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnClickedCancel
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_BtnClickedCancel

    public void ShowDataInTable(Vector<TicketData> tableData) {
        for ( )
    }

    public void LoadData() {
        try {
            con = DbUtils.getDbConnection();
            pst = con.prepareStatement("SELECT * from ticket");
            ResultSet rs = pst.executeQuery();

            ResultSetMetaData rsm = rs.getMetaData();
            int c;
            c = rsm.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("flightid"));
                    v2.add(rs.getString("custid"));
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("price"));
                    v2.add(rs.getString("seats"));
                    v2.add(rs.getString("date"));
                }

                Df.addRow(v2);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ticket.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ticket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    protected Vector<TicketData> getTicketReportData() {
        Vector<TicketData> ticketSalesData = new Vector<>();
        try {
            con = DbUtils.getDbConnection();
            pst = con.prepareStatement("SELECT * from ticket");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {

                String id = rs.getString("id");
                String flightId = rs.getString("flightid");
                String customerId = rs.getString("custid");
                String className = rs.getString("class");
                String ticketSalePrice = rs.getString("price");
                String numberOfSeats = rs.getString("seats");
                String flightDate = rs.getString("date");
                TicketData ticketSaleData = new TicketData(id, flightId, customerId, className, ticketSalePrice, numberOfSeats, flightDate);
                ticketSalesData.add(ticketSaleData);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ticket.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ticketSalesData;
    }

    // Class to hold all of the data for an entry in the tickets report
    protected class TicketData {

        private String id;
        private String flightId;
        private String customerId;
        private String className;
        private String ticketPrice;
        private String numberOfSeats;
        private String flightDate;

        public TicketData(String id, String flightId, String customerId, String className, String ticketPrice, String numberOfSeats, String flightDate) {
            this.id = id;
            this.flightId = flightId;
            this.customerId = customerId;
            this.className = className;
            this.ticketPrice = ticketPrice;
            this.numberOfSeats = numberOfSeats;
            this.flightDate = flightDate;
        }

        public String getId() {
            return id;
        }

        public String getFlightId() {
            return flightId;
        }

        public String getCustomerId() {
            return customerId;
        }

        public String getClassName() {
            return className;
        }

        public String getTicketPrice() {
            return ticketPrice;
        }

        public String getNumberOfSeats() {
            return numberOfSeats;
        }

        public String getFlightDate() {
            return flightDate;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
